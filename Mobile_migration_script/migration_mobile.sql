CREATE OR REPLACE PROCEDURE MIGRATION_MOBILE AS

 ADDR_DTL_INV   	ADDRDTLS.ADDRDTLS_INV_NUM%TYPE;
 CLIENT_TYPE    	CLIENTS.CLIENTS_TYPE_FLG%TYPE;
 CLIENT_NO      	CLIENTS.CLIENTS_CODE%TYPE;
 OLD_MOBILE_NUM   	VARCHAR2(512)        := '';
 E_EXCEPTION 		EXCEPTION;
 
 CURSOR C1 IS
    SELECT M.SMSBREG_MOBILE_OWNER,M.SMSBREG_MOBILE_NUMBER FROM SMSBREG M 
		WHERE M.SMSBREG_MOBILE_NUMBER <> ( SELECT REGEXP_SUBSTR (GET_MOBILE_NUM(M.SMSBREG_MOBILE_OWNER), '[^,]+', 1, 1) AS SPLITED_STRING FROM DUAL);
	
BEGIN
  FOR IDX IN C1
  LOOP
		ADDR_DTL_INV :=NULL;
		SELECT CLIENTS_TYPE_FLG INTO CLIENT_TYPE FROM CLIENTS WHERE CLIENTS_CODE = IDX.SMSBREG_MOBILE_OWNER;
		
		IF TRIM (CLIENT_TYPE) = 'J' THEN
			SELECT JNTCLDTL_INDIV_CLIENT_CODE INTO CLIENT_NO
			   FROM (  SELECT JNTCLDTL_INDIV_CLIENT_CODE FROM JOINTCLIENTSDTL WHERE JNTCLDTL_CLIENT_CODE = IDX.SMSBREG_MOBILE_OWNER AND (NVL (JNTCLDTL_PRIMARY_APPLICANT, '0') = '1'
             OR JNTCLDTL_DTL_SL = 1)  ORDER BY NVL (JNTCLDTL_PRIMARY_APPLICANT, '0') DESC, JNTCLDTL_DTL_SL ASC) WHERE ROWNUM = 1;
		ELSE
			CLIENT_NO := IDX.SMSBREG_MOBILE_OWNER;
		END IF;
		
    SELECT CLIENTS_ADDR_INV_NUM INTO  ADDR_DTL_INV  FROM CLIENTS WHERE CLIENTS_CODE = CLIENT_NO;
    
		IF(  ADDR_DTL_INV IS NOT NULL ) THEN
      
			SELECT TAB_TO_STRING ( CAST (COLLECT (A.ADDRDTLS_MOBILE_NUM) AS SPLITSTR), ',') AS ADDRDTLS_MOBILE_NUM INTO OLD_MOBILE_NUM
				FROM ADDRDTLS A WHERE A.ADDRDTLS_INV_NUM = ADDR_DTL_INV;
			
			INSERT INTO MIGRATION_MOBILE_NUM (CLIENTS_CODE, NEW_MOBILE_NUM,OLD_MOBILE_NUM, MIGRATION_TIME) 
				VALUES (CLIENT_NO,IDX.SMSBREG_MOBILE_NUMBER, OLD_MOBILE_NUM, SYSDATE);
			COMMIT;
      
			UPDATE ADDRDTLS SET ADDRDTLS_MOBILE_NUM=IDX.SMSBREG_MOBILE_NUMBER WHERE ADDRDTLS_INV_NUM = ADDR_DTL_INV ;
			COMMIT;
      
    END IF;

  END LOOP;
  
  EXCEPTION WHEN OTHERS THEN
    RAISE E_EXCEPTION;
    
 END MIGRATION_MOBILE;
