/*Table partitioning. We partitioned 5 tables based on the branch code.*/
ALTER TABLE ACNTS DROP PRIMARY KEY CASCADE;

DROP TRIGGER TRIG_INSERT_ACNTS_AMLACNTCL;

CREATE TABLE ACNTS_PART
(
  ACNTS_ENTITY_NUM           NUMBER(4),
  ACNTS_INTERNAL_ACNUM       NUMBER(14),
  ACNTS_BRN_CODE             NUMBER(6)          DEFAULT 0,
  ACNTS_CLIENT_NUM           NUMBER(12)         DEFAULT 0,
  ACNTS_AC_SEQ_NUM           NUMBER(6)          DEFAULT 0,
  ACNTS_ACCOUNT_NUMBER       VARCHAR2(25 BYTE),
  ACNTS_PROD_CODE            NUMBER(4)          DEFAULT 0,
  ACNTS_AC_TYPE              VARCHAR2(5 BYTE),
  ACNTS_AC_SUB_TYPE          NUMBER(3)          DEFAULT 0,
  ACNTS_SCHEME_CODE          VARCHAR2(6 BYTE),
  ACNTS_OPENING_DATE         DATE,
  ACNTS_AC_NAME1             VARCHAR2(50 BYTE),
  ACNTS_AC_NAME2             VARCHAR2(50 BYTE),
  ACNTS_SHORT_NAME           VARCHAR2(25 BYTE),
  ACNTS_AC_ADDR1             VARCHAR2(35 BYTE),
  ACNTS_AC_ADDR2             VARCHAR2(35 BYTE),
  ACNTS_AC_ADDR3             VARCHAR2(35 BYTE),
  ACNTS_AC_ADDR4             VARCHAR2(35 BYTE),
  ACNTS_AC_ADDR5             VARCHAR2(35 BYTE),
  ACNTS_LOCN_CODE            VARCHAR2(6 BYTE),
  ACNTS_CURR_CODE            VARCHAR2(3 BYTE),
  ACNTS_GLACC_CODE           VARCHAR2(15 BYTE),
  ACNTS_SALARY_ACNT          CHAR(1 BYTE)       DEFAULT 0,
  ACNTS_PASSBK_REQD          CHAR(1 BYTE)       DEFAULT 0,
  ACNTS_DCHANNEL_CODE        VARCHAR2(6 BYTE),
  ACNTS_MKT_CHANNEL_CODE     VARCHAR2(6 BYTE),
  ACNTS_MKT_BY_STAFF         VARCHAR2(8 BYTE),
  ACNTS_MKT_BY_BRN           NUMBER(6)          DEFAULT 0,
  ACNTS_DSA_CODE             VARCHAR2(8 BYTE),
  ACNTS_MODE_OF_OPERN        NUMBER(3)          DEFAULT 0,
  ACNTS_MOPR_ADDN_INFO       VARCHAR2(50 BYTE),
  ACNTS_REPAYABLE_TO         NUMBER(3)          DEFAULT 0,
  ACNTS_SPECIAL_ACNT         CHAR(1 BYTE)       DEFAULT 0,
  ACNTS_NOMINATION_REQD      CHAR(1 BYTE)       DEFAULT 0,
  ACNTS_CREDIT_INT_REQD      CHAR(1 BYTE)       DEFAULT 0,
  ACNTS_MINOR_ACNT           CHAR(1 BYTE)       DEFAULT 0,
  ACNTS_POWER_OF_ATTORNEY    CHAR(1 BYTE)       DEFAULT 0,
  ACNTS_CONNP_INV_NUM        NUMBER(10)         DEFAULT 0,
  ACNTS_NUM_SIG_COMB         NUMBER(5)          DEFAULT 0,
  ACNTS_TELLER_OPERN         CHAR(1 BYTE)       DEFAULT 0,
  ACNTS_ATM_OPERN            CHAR(1 BYTE)       DEFAULT 0,
  ACNTS_CALL_CENTER_OPERN    CHAR(1 BYTE)       DEFAULT 0,
  ACNTS_INET_OPERN           CHAR(1 BYTE)       DEFAULT 0,
  ACNTS_CR_CARDS_ALLOWED     CHAR(1 BYTE)       DEFAULT 0,
  ACNTS_KIOSK_BANKING        CHAR(1 BYTE)       DEFAULT 0,
  ACNTS_SMS_OPERN            CHAR(1 BYTE)       DEFAULT 0,
  ACNTS_OD_ALLOWED           CHAR(1 BYTE)       DEFAULT 0,
  ACNTS_CHQBK_REQD           CHAR(1 BYTE)       DEFAULT 0,
  ACNTS_ARM_CRM              VARCHAR2(8 BYTE),
  ACNTS_ARM_ROLE             VARCHAR2(6 BYTE),
  ACNTS_BUSDIVN_CODE         VARCHAR2(3 BYTE),
  ACNTS_CREATION_STATUS      CHAR(1 BYTE),
  ACNTS_BASE_DATE            DATE,
  ACNTS_INOP_ACNT            CHAR(1 BYTE)       DEFAULT 0,
  ACNTS_DORMANT_ACNT         CHAR(1 BYTE)       DEFAULT 0,
  ACNTS_LAST_TRAN_DATE       DATE,
  ACNTS_NONSYS_LAST_DATE     DATE,
  ACNTS_INT_CALC_UPTO        DATE,
  ACNTS_MMB_INT_ACCR_UPTO    DATE,
  ACNTS_INT_ACCR_UPTO        DATE,
  ACNTS_INT_DBCR_UPTO        DATE,
  ACNTS_TRF_TO_OVERDUE       DATE,
  ACNTS_DB_FREEZED           CHAR(1 BYTE)       DEFAULT 0,
  ACNTS_CR_FREEZED           CHAR(1 BYTE)       DEFAULT 0,
  ACNTS_CONTRACT_BASED_FLG   CHAR(1 BYTE)       DEFAULT 0,
  ACNTS_ACST_UPTO_DATE       DATE,
  ACNTS_LAST_STMT_NUM        NUMBER(6)          DEFAULT 0,
  ACNTS_LAST_CHQBK_ISSUED    DATE,
  ACNTS_CLOSURE_DATE         DATE,
  ACNTS_PREOPEN_ENTD_BY      VARCHAR2(8 BYTE),
  ACNTS_PREOPEN_ENTD_ON      DATE,
  ACNTS_PREOPEN_LAST_MOD_BY  VARCHAR2(8 BYTE),
  ACNTS_PREOPEN_LAST_MOD_ON  DATE,
  ACNTS_ENTD_BY              VARCHAR2(8 BYTE),
  ACNTS_ENTD_ON              DATE,
  ACNTS_LAST_MOD_BY          VARCHAR2(8 BYTE),
  ACNTS_LAST_MOD_ON          DATE,
  ACNTS_AUTH_BY              VARCHAR2(8 BYTE),
  ACNTS_AUTH_ON              DATE,
  TBA_MAIN_KEY               VARCHAR2(25 BYTE),
  ACNTS_TRANSFER_APPL        CHAR(1 BYTE)       DEFAULT 0,
  ACNTS_TRANSFRD_BRNCODE     NUMBER(6),
  ACNTS_ABB_TRAN_ALLOWED     CHAR(1 BYTE)       DEFAULT '1',
  ACNTS_DECEASED_APPL        CHAR(1 BYTE)       DEFAULT '0',
  ACNTS_PRIMARY_CREDIT       NUMBER(18,3)       DEFAULT '0'
)
PARTITION BY RANGE(ACNTS_BRN_CODE)
  INTERVAL(1) STORE IN (TBSACNTS)
  (PARTITION EMPTY VALUES LESS THAN (1) TABLESPACE TBSACNTS);
  
INSERT INTO ACNTS_PART
SELECT /*+ parallel(16)*/ * FROM ACNTS;

COMMIT;

ALTER TABLE ACNTS RENAME TO ACNTS_OLD_PART;

ALTER TABLE ACNTS_PART RENAME TO ACNTS;
  
DROP INDEX ACNTGL;

CREATE INDEX IDX_ACNTGL ON ACNTS(ACNTS_ENTITY_NUM, ACNTS_GLACC_CODE) TABLESPACE CBSINDEX PARALLEL 8;

ALTER INDEX IDX_ACNTGL NOPARALLEL;

DROP INDEX IDX_ACCOUNTNUM;

CREATE INDEX IDX_ACCOUNTNUM ON ACNTS(ACNTS_ENTITY_NUM, ACNTS_ACCOUNT_NUMBER) TABLESPACE CBSINDEX PARALLEL 8;

ALTER INDEX IDX_ACCOUNTNUM NOPARALLEL;

DROP INDEX IDX_ACNTCLIENTS;

CREATE INDEX IDX_ACNTCLIENTS ON ACNTS(ACNTS_ENTITY_NUM, ACNTS_CLIENT_NUM) TABLESPACE CBSINDEX PARALLEL 8;

ALTER INDEX IDX_ACNTCLIENTS NOPARALLEL;

DROP INDEX IDX_ACNTSBRN;

CREATE INDEX IDX_ACNTSBRN ON ACNTS(ACNTS_ENTITY_NUM, ACNTS_BRN_CODE,ACNTS_INTERNAL_ACNUM) TABLESPACE CBSINDEX PARALLEL 8;

ALTER INDEX IDX_ACNTSBRN NOPARALLEL;

DROP INDEX IDX_ACNTS_PRODBRN;

CREATE INDEX IDX_ACNTS_PRODBRN ON ACNTS(ACNTS_ENTITY_NUM, ACNTS_PROD_CODE, ACNTS_BRN_CODE) TABLESPACE CBSINDEX PARALLEL 8;

ALTER INDEX IDX_ACNTS_PRODBRN NOPARALLEL;

DROP INDEX IDX_CONNP_INV_NUM_AC;

CREATE INDEX IDX_CONNP_INV_NUM_AC ON ACNTS(ACNTS_ENTITY_NUM, ACNTS_CONNP_INV_NUM) TABLESPACE CBSINDEX PARALLEL 8;

ALTER INDEX IDX_CONNP_INV_NUM_AC NOPARALLEL;

DROP INDEX PK_ACNTS;

CREATE UNIQUE INDEX PK_ACNTS ON ACNTS(ACNTS_ENTITY_NUM, ACNTS_INTERNAL_ACNUM) TABLESPACE CBSINDEX PARALLEL 8;

ALTER INDEX PK_ACNTS NOPARALLEL;

ALTER TABLE ACNTS ADD (
  CONSTRAINT PK_ACNTS
  PRIMARY KEY
  (ACNTS_ENTITY_NUM, ACNTS_INTERNAL_ACNUM)
  USING INDEX PK_ACNTS
  ENABLE VALIDATE);

CREATE OR REPLACE TRIGGER TRIG_INSERT_ACNTS_AMLACNTCL          
   BEFORE INSERT OR UPDATE OF ACNTS_DORMANT_ACNT,ACNTS_INOP_ACNT ON ACNTS
   FOR EACH ROW
BEGIN
 --ENTITY CODE COMMONLY ADDED - 21-11-2009  - BEG
       PKG_ENTITY.SP_SET_ENTITY_CODE(:NEW.ACNTS_ENTITY_NUM);
 --ENTITY CODE COMMONLY ADDED - 21-11-2009  - END

   IF INSERTING THEN
       <<INSERTAMLACNTCL>>
       BEGIN
         INSERT INTO AMLACNTCL
           (AMLACNTCL_ENTITY_NUM,AMLACNTCL_INTERNAL_ACNUM,
            AMLACNTCL_CLIENT_CODE,
            AMLACNTCL_RISK_CATE,
            AMLACNTCL_TYPE_FLG)
         VALUES
           (PKG_ENTITY.FN_GET_ENTITY_CODE,
            :NEW.ACNTS_INTERNAL_ACNUM,
            :NEW.ACNTS_CLIENT_NUM,
            (SELECT C.CLIENTS_RISK_CATEGORIZATION
               FROM CLIENTS C
              WHERE C.CLIENTS_CODE = :NEW.ACNTS_CLIENT_NUM),
            (SELECT C.CLIENTS_TYPE_FLG
               FROM CLIENTS C
              WHERE C.CLIENTS_CODE = :NEW.ACNTS_CLIENT_NUM));
       EXCEPTION
         WHEN OTHERS THEN
           RAISE_APPLICATION_ERROR(-20999,'Error in Account number risk cat insertion - TRIG_INSERT_ACNTS_AMLACNTCL');
       END INSERTAMLACNTCL;

       <<INSERT_AMLACSOPENSUMM>>
       BEGIN
         INSERT INTO AMLACSOPENSUMM ( AMLACSOP_CLIENT_CODE, AMLACSOP_NUM_ACHOLDER, AMLACSOP_NUM_INTRODUCER)
         VALUES (:NEW.ACNTS_CLIENT_NUM,1,0);

         EXCEPTION
         WHEN DUP_VAL_ON_INDEX THEN
             UPDATE  AMLACSOPENSUMM SET AMLACSOP_NUM_ACHOLDER = AMLACSOP_NUM_ACHOLDER+1 WHERE AMLACSOP_CLIENT_CODE = :NEW.ACNTS_CLIENT_NUM;
         WHEN OTHERS THEN
             RAISE_APPLICATION_ERROR(-20999,'Error in Account Opening Summary insertion - TRIG_INSERT_ACNTS_AMLACNTCL');

        END INSERT_AMLACSOPENSUMM;

     ELSIF UPDATING THEN
          <<INSERT_AMLACDORMINOP>>
           BEGIN
               IF :NEW.ACNTS_INOP_ACNT = '0' AND :NEW.ACNTS_DORMANT_ACNT = '0' THEN
                   DELETE FROM AMLACDORMINOP WHERE AMLACDI_ENTITY_NUM = PKG_ENTITY.FN_GET_ENTITY_CODE AND  AMLACDI_INTERNAL_ACNUM = :NEW.ACNTS_INTERNAL_ACNUM;
               ELSE
                   INSERT INTO AMLACDORMINOP (AMLACDI_ENTITY_NUM,AMLACDI_INTERNAL_ACNUM, AMLACDI_DORM_FLG, AMLACDI_INOP_FLG)
                   VALUES (PKG_ENTITY.FN_GET_ENTITY_CODE,:NEW.ACNTS_INTERNAL_ACNUM,:NEW.ACNTS_DORMANT_ACNT,:NEW.ACNTS_INOP_ACNT);
               END IF;

               EXCEPTION
               WHEN DUP_VAL_ON_INDEX THEN
                 UPDATE AMLACDORMINOP SET AMLACDI_DORM_FLG = :NEW.ACNTS_DORMANT_ACNT,AMLACDI_INOP_FLG = :NEW.ACNTS_INOP_ACNT WHERE  AMLACDI_ENTITY_NUM = PKG_ENTITY.FN_GET_ENTITY_CODE AND  AMLACDI_INTERNAL_ACNUM = :NEW.ACNTS_INTERNAL_ACNUM;
               WHEN OTHERS THEN
                 RAISE_APPLICATION_ERROR(-20999,'Error in AMLACDORMINOP insertion - TRIG_INSERT_ACNTS_AMLACNTCL');
           END INSERT_AMLACDORMINOP;
   END IF;
 END TRIG_INSERT_ACNTS_AMLACNTCL;
/


ALTER TABLE LOANIA DROP PRIMARY KEY;

CREATE TABLE LOANIA_PART
(
  LOANIA_ENTITY_NUM            NUMBER(4)        NOT NULL,
  LOANIA_BRN_CODE              NUMBER(6)        NOT NULL,
  LOANIA_ACNT_NUM              NUMBER(14)       NOT NULL,
  LOANIA_VALUE_DATE            DATE             NOT NULL,
  LOANIA_ACCRUAL_DATE          DATE             NOT NULL,
  LOANIA_PREV_ACCR_DATE        DATE,
  LOANIA_ACNT_CURR             VARCHAR2(3 BYTE),
  LOANIA_ACNT_BAL              NUMBER(18,3)     DEFAULT 0,
  LOANIA_TOTAL_NEW_INT_AMT     NUMBER(18,9)     DEFAULT 0,
  LOANIA_INT_ON_AMT            NUMBER(18,3)     DEFAULT 0,
  LOANIA_OD_PORTION            NUMBER(18,3)     DEFAULT 0,
  LOANIA_TOTAL_NEW_OD_INT_AMT  NUMBER(18,9)     DEFAULT 0,
  LOANIA_INT_RATE              NUMBER(8,5)      DEFAULT 0,
  LOANIA_SLAB_AMT              NUMBER(18,3)     DEFAULT 0,
  LOANIA_OD_INT_RATE           NUMBER(8,5)      DEFAULT 0,
  LOANIA_LIMIT                 NUMBER(18,3)     DEFAULT 0,
  LOANIA_DP                    NUMBER(18,3)     DEFAULT 0,
  LOANIA_INT_AMT               NUMBER(18,9)     DEFAULT 0,
  LOANIA_INT_AMT_RND           NUMBER(18,3)     DEFAULT 0,
  LOANIA_OD_INT_AMT            NUMBER(18,9)     DEFAULT 0,
  LOANIA_OD_INT_AMT_RND        NUMBER(18,3)     DEFAULT 0,
  LOANIA_NPA_STATUS            NUMBER(1)        DEFAULT 0,
  LOANIA_NPA_AMT               NUMBER(18,3)     DEFAULT 0,
  LOANIA_NPA_INT_POSTED_AMT    NUMBER(18,3)     DEFAULT 0,
  LOANIA_ARR_INT_AMT           NUMBER(18,3)     DEFAULT 0
)
PARTITION BY RANGE(LOANIA_BRN_CODE)
  INTERVAL(1) STORE IN (TBFES)
  (PARTITION EMPTY VALUES LESS THAN (1) TABLESPACE TBFES);

INSERT INTO LOANIA_PART
SELECT /*+ parallel(16)*/ * FROM LOANIA;

COMMIT;

ALTER TABLE LOANIA RENAME TO LOANIA_OLD_PART;

ALTER TABLE LOANIA_PART RENAME TO LOANIA;

CREATE UNIQUE INDEX IDX_LOANIA_PK ON LOANIA(LOANIA_ENTITY_NUM, LOANIA_BRN_CODE, LOANIA_ACNT_NUM, LOANIA_VALUE_DATE, LOANIA_ACCRUAL_DATE) TABLESPACE CBSINDEX PARALLEL 8;

ALTER INDEX IDX_LOANIA_PK NOPARALLEL;

ALTER TABLE LOANIA ADD CONSTRAINT PK_LOANIA 
  PRIMARY KEY
  (LOANIA_ENTITY_NUM, LOANIA_BRN_CODE, LOANIA_ACNT_NUM, LOANIA_VALUE_DATE, LOANIA_ACCRUAL_DATE)
USING INDEX IDX_LOANIA_PK;

DROP INDEX IDX_LOANIA_01;

CREATE INDEX IDX_LOANIA_01 ON LOANIA (LOANIA_ENTITY_NUM, LOANIA_BRN_CODE, LOANIA_ACNT_NUM) TABLESPACE CBSINDEX PARALLEL 8;

ALTER INDEX IDX_LOANIA_01 NOPARALLEL;



ALTER TABLE LOANIADTL DROP PRIMARY KEY CASCADE;

CREATE TABLE LOANIADTL_PART
(
  LOANIADTL_ENTITY_NUM    NUMBER(4),
  LOANIADTL_BRN_CODE      NUMBER(6)             NOT NULL,
  LOANIADTL_ACNT_NUM      NUMBER(14)            NOT NULL,
  LOANIADTL_VALUE_DATE    DATE                  NOT NULL,
  LOANIADTL_ACCRUAL_DATE  DATE                  NOT NULL,
  LOANIADTL_SL_NUM        NUMBER(5)             NOT NULL,
  LOANIADTL_INT_RATE      NUMBER(8,5)           DEFAULT 0,
  LOANIADTL_UPTO_AMT      NUMBER(18,3)          DEFAULT 0,
  LOANIADTL_INT_AMT       NUMBER(18,9)          DEFAULT 0,
  LOANIADTL_INT_AMT_RND   NUMBER(18,3)          DEFAULT 0
)
PARTITION BY RANGE(LOANIADTL_BRN_CODE)
  INTERVAL(1) STORE IN (DATA)
  (PARTITION EMPTY VALUES LESS THAN (1) TABLESPACE DATA);

INSERT INTO LOANIADTL_PART
SELECT /*+ parallel(16)*/ * FROM LOANIADTL;

COMMIT;

ALTER TABLE LOANIADTL RENAME TO LOANIADTL_OLD_PART;

ALTER TABLE LOANIADTL_PART RENAME TO LOANIADTL;

CREATE UNIQUE INDEX IDX_LOANIADTL_PK ON LOANIADTL(LOANIADTL_ENTITY_NUM, LOANIADTL_BRN_CODE, LOANIADTL_ACNT_NUM, LOANIADTL_VALUE_DATE, LOANIADTL_ACCRUAL_DATE, LOANIADTL_SL_NUM) TABLESPACE CBSINDEX PARALLEL 8;

ALTER INDEX IDX_LOANIADTL_PK NOPARALLEL;

ALTER TABLE LOANIADTL ADD (
  CONSTRAINT PK_LOANIADTL
  PRIMARY KEY
  (LOANIADTL_ENTITY_NUM, LOANIADTL_BRN_CODE, LOANIADTL_ACNT_NUM, LOANIADTL_VALUE_DATE, LOANIADTL_ACCRUAL_DATE, LOANIADTL_SL_NUM)
  USING INDEX IDX_LOANIADTL_PK
  ENABLE VALIDATE);

ALTER TABLE LOANIAMRR DROP PRIMARY KEY CASCADE;
 
CREATE TABLE LOANIAMRR_PART
(
  LOANIAMRR_ENTITY_NUM            NUMBER(4)     NOT NULL,
  LOANIAMRR_BRN_CODE              NUMBER(6)     NOT NULL,
  LOANIAMRR_ACNT_NUM              NUMBER(14)    NOT NULL,
  LOANIAMRR_VALUE_DATE            DATE          NOT NULL,
  LOANIAMRR_ACCRUAL_DATE          DATE          NOT NULL,
  LOANIAMRR_PREV_ACCR_DATE        DATE,
  LOANIAMRR_ACNT_CURR             VARCHAR2(3 BYTE),
  LOANIAMRR_ACNT_BAL              NUMBER(18,3)  DEFAULT 0,
  LOANIAMRR_TOTAL_NEW_INT_AMT     NUMBER(18,9)  DEFAULT 0,
  LOANIAMRR_INT_ON_AMT            NUMBER(18,3)  DEFAULT 0,
  LOANIAMRR_OD_PORTION            NUMBER(18,3)  DEFAULT 0,
  LOANIAMRR_TOTAL_NEW_OD_INT_AMT  NUMBER(18,9)  DEFAULT 0,
  LOANIAMRR_INT_RATE              NUMBER(8,5)   DEFAULT 0,
  LOANIAMRR_SLAB_AMT              NUMBER(18,3)  DEFAULT 0,
  LOANIAMRR_OD_INT_RATE           NUMBER(8,5)   DEFAULT 0,
  LOANIAMRR_LIMIT                 NUMBER(18,3)  DEFAULT 0,
  LOANIAMRR_DP                    NUMBER(18,3)  DEFAULT 0,
  LOANIAMRR_INT_AMT               NUMBER(18,9)  DEFAULT 0,
  LOANIAMRR_INT_AMT_RND           NUMBER(18,3)  DEFAULT 0,
  LOANIAMRR_OD_INT_AMT            NUMBER(18,9)  DEFAULT 0,
  LOANIAMRR_OD_INT_AMT_RND        NUMBER(18,3)  DEFAULT 0,
  LOANIAMRR_NPA_STATUS            NUMBER(1)     DEFAULT 0,
  LOANIAMRR_NPA_AMT               NUMBER(18,3)  DEFAULT 0,
  LOANIAMRR_NPA_INT_POSTED_AMT    NUMBER(18,3)  DEFAULT 0,
  LOANIAMRR_ARR_INT_AMT           NUMBER(18,3)  DEFAULT 0
)
PARTITION BY RANGE(LOANIAMRR_BRN_CODE)
  INTERVAL(1) STORE IN (TBFES)
  (PARTITION EMPTY VALUES LESS THAN (1) TABLESPACE TBFES);

INSERT INTO LOANIAMRR_PART
SELECT /*+ parallel(16)*/ * FROM LOANIAMRR;

COMMIT;

ALTER TABLE LOANIAMRR RENAME TO LOANIAMRR_OLD_PART;

ALTER TABLE LOANIAMRR_PART RENAME TO LOANIAMRR;

CREATE UNIQUE INDEX IDX_LOANIAMRR_PK ON LOANIAMRR(LOANIAMRR_ENTITY_NUM, LOANIAMRR_BRN_CODE, LOANIAMRR_ACNT_NUM, LOANIAMRR_VALUE_DATE, LOANIAMRR_ACCRUAL_DATE) TABLESPACE CBSINDEX PARALLEL 8;

ALTER INDEX IDX_LOANIAMRR_PK NOPARALLEL;

ALTER TABLE LOANIAMRR ADD (
  CONSTRAINT PK_LOANIAMRR
  PRIMARY KEY
  (LOANIAMRR_ENTITY_NUM, LOANIAMRR_BRN_CODE, LOANIAMRR_ACNT_NUM, LOANIAMRR_VALUE_DATE, LOANIAMRR_ACCRUAL_DATE)
  USING INDEX IDX_LOANIAMRR_PK
  ENABLE VALIDATE);
  
CREATE INDEX IDX_LOANIAMRR_01 ON LOANIAMRR (LOANIAMRR_ENTITY_NUM, LOANIAMRR_BRN_CODE, LOANIAMRR_ACNT_NUM) TABLESPACE CBSINDEX PARALLEL 8;

ALTER INDEX IDX_LOANIAMRR_01 NOPARALLEL;


  
ALTER TABLE LOANIAMRRDTL DROP PRIMARY KEY CASCADE;

CREATE TABLE LOANIAMRRDTL_PART
(
  LOANIAMRRDTL_ENTITY_NUM    NUMBER(4)          NOT NULL,
  LOANIAMRRDTL_BRN_CODE      NUMBER(6)          NOT NULL,
  LOANIAMRRDTL_ACNT_NUM      NUMBER(14)         NOT NULL,
  LOANIAMRRDTL_VALUE_DATE    DATE               NOT NULL,
  LOANIAMRRDTL_ACCRUAL_DATE  DATE               NOT NULL,
  LOANIAMRRDTL_SL_NUM        NUMBER(5)          NOT NULL,
  LOANIAMRRDTL_INT_RATE      NUMBER(8,5)        DEFAULT 0,
  LOANIAMRRDTL_UPTO_AMT      NUMBER(18,3)       DEFAULT 0,
  LOANIAMRRDTL_INT_AMT       NUMBER(18,9)       DEFAULT 0,
  LOANIAMRRDTL_INT_AMT_RND   NUMBER(18,3)       DEFAULT 0
)
PARTITION BY RANGE(LOANIAMRRDTL_BRN_CODE)
  INTERVAL(1) STORE IN (DATA)
  (PARTITION EMPTY VALUES LESS THAN (1) TABLESPACE DATA);

INSERT INTO LOANIAMRRDTL_PART
SELECT /*+ parallel(16)*/ * FROM LOANIAMRRDTL;

COMMIT;

ALTER TABLE LOANIAMRRDTL RENAME TO LOANIAMRRDTL_OLD_PART;

ALTER TABLE LOANIAMRRDTL_PART RENAME TO LOANIAMRRDTL;

CREATE UNIQUE INDEX IDX_LOANIAMRRDTL_PK ON LOANIAMRRDTL(LOANIAMRRDTL_ENTITY_NUM, LOANIAMRRDTL_BRN_CODE, LOANIAMRRDTL_ACNT_NUM, LOANIAMRRDTL_VALUE_DATE, LOANIAMRRDTL_ACCRUAL_DATE, LOANIAMRRDTL_SL_NUM) TABLESPACE CBSINDEX PARALLEL 8;

ALTER INDEX IDX_LOANIAMRRDTL_PK NOPARALLEL;

ALTER TABLE LOANIAMRRDTL ADD (
  CONSTRAINT PK_LOANIAMRRDTL
  PRIMARY KEY
  (LOANIAMRRDTL_ENTITY_NUM, LOANIAMRRDTL_BRN_CODE, LOANIAMRRDTL_ACNT_NUM, LOANIAMRRDTL_VALUE_DATE, LOANIAMRRDTL_ACCRUAL_DATE, LOANIAMRRDTL_SL_NUM)
  USING INDEX IDX_LOANIAMRRDTL_PK
  ENABLE VALIDATE);

CONN /AS SYSDBA

BEGIN
  DBMS_STATS.GATHER_SCHEMA_STATS(ownname=>'SBL_MOCKYOE',degree=>16);
END;
/

COMMIT;

EXIT;
